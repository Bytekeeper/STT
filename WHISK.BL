import whisk

export main

main = kotlin_compile(
    compiler= compiler_deps,
    srcs = [glob('src/main/kotlin/**.kt'), grammar],
    exported_deps=[implementation_deps],
    cp=[],
    kapt_processors=[dagger_compiler],
    plugins=[kap_deps, tools],
    additional_parameters=['-jvm-target', '1.8'])

grammar = antlr_gen(srcs=glob('src/main/antlr/**.g4'), arguments = ['-visitor', '-long-messages'])

implementation_deps = maven_library(
    artifacts=[
        'org.fxmisc.richtext:richtextfx:0.10.0',
        'org.yaml:snakeyaml:1.24',
        'com.google.dagger:dagger:2.22.1',
        'net.engio:mbassador:1.3.2',
        'org.controlsfx:controlsfx:8.40.15',
        'net.rcarz:jira-client:0.5',
        'com.jsoniter:jsoniter:0.9.23',
        'com.jsoniter:jsoniter:0.9.23',
        'org.jetbrains.kotlin:kotlin-stdlib-jdk8:jar:1.3.50',
        'org.antlr:antlr4-runtime:4.7.2'
    ])

dagger_compiler = maven_library(artifacts=['com.google.dagger:dagger-compiler:2.22.1'])
tools = prebuilt_jar('/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar')
kap_deps = maven_library(artifacts='org.jetbrains.kotlin:kotlin-annotation-processing-embeddable:1.3.50')
compiler_deps = maven_library(artifacts='org.jetbrains.kotlin:kotlin-compiler-embeddable:1.3.50')