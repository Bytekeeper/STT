{"id":"PAlP","dependencies":[{"name":"/home/dante/rustprojects/stt/frontend/package.json","includedInParent":true,"mtime":1605632882290},{"name":"/home/dante/node_modules/lit-html/package.json","includedInParent":true,"mtime":1602791762412},{"name":"./directive.js","loc":{"line":14,"column":28},"parent":"/home/dante/node_modules/lit-html/lib/parts.js","resolved":"/home/dante/node_modules/lit-html/lib/directive.js"},{"name":"./dom.js","loc":{"line":15,"column":28},"parent":"/home/dante/node_modules/lit-html/lib/parts.js","resolved":"/home/dante/node_modules/lit-html/lib/dom.js"},{"name":"./part.js","loc":{"line":16,"column":34},"parent":"/home/dante/node_modules/lit-html/lib/parts.js","resolved":"/home/dante/node_modules/lit-html/lib/part.js"},{"name":"./template-instance.js","loc":{"line":17,"column":33},"parent":"/home/dante/node_modules/lit-html/lib/parts.js","resolved":"/home/dante/node_modules/lit-html/lib/template-instance.js"},{"name":"./template-result.js","loc":{"line":18,"column":31},"parent":"/home/dante/node_modules/lit-html/lib/parts.js","resolved":"/home/dante/node_modules/lit-html/lib/template-result.js"},{"name":"./template.js","loc":{"line":19,"column":29},"parent":"/home/dante/node_modules/lit-html/lib/parts.js","resolved":"/home/dante/node_modules/lit-html/lib/template.js"}],"generated":{"js":"var $PAlP$exports={};$parcel$require(\"PAlP\",\"./directive.js\"),$parcel$require(\"PAlP\",\"./dom.js\"),$parcel$require(\"PAlP\",\"./part.js\"),$parcel$require(\"PAlP\",\"./template-instance.js\"),$parcel$require(\"PAlP\",\"./template-result.js\"),$parcel$require(\"PAlP\",\"./template.js\");const $PAlP$export$isPrimitive=t=>null===t||!(\"object\"==typeof t||\"function\"==typeof t);$PAlP$exports.isPrimitive=$PAlP$export$isPrimitive;const $PAlP$export$isIterable=t=>Array.isArray(t)||!(!t||!t[Symbol.iterator]);$PAlP$exports.isIterable=$PAlP$export$isIterable;class $PAlP$export$AttributeCommitter{constructor(t,e,i){this.dirty=!0,this.element=t,this.name=e,this.strings=i,this.parts=[];for(let r=0;r<i.length-1;r++)this.parts[r]=this._createPart()}_createPart(){return new $PAlP$export$AttributePart(this)}_getValue(){const t=this.strings,e=t.length-1,i=this.parts;if(1===e&&\"\"===t[0]&&\"\"===t[1]){const t=i[0].value;if(\"symbol\"==typeof t)return String(t);if(\"string\"==typeof t||!$PAlP$export$isIterable(t))return t}let r=\"\";for(let s=0;s<e;s++){r+=t[s];const e=i[s];if(void 0!==e){const t=e.value;if($PAlP$export$isPrimitive(t)||!$PAlP$export$isIterable(t))r+=\"string\"==typeof t?t:String(t);else for(const e of t)r+=\"string\"==typeof e?e:String(e)}}return r+=t[e]}commit(){this.dirty&&(this.dirty=!1,this.element.setAttribute(this.name,this._getValue()))}}$PAlP$exports.AttributeCommitter=$PAlP$export$AttributeCommitter;class $PAlP$export$AttributePart{constructor(t){this.value=void 0,this.committer=t}setValue(t){t===$PAlP$import$noChange||$PAlP$export$isPrimitive(t)&&t===this.value||(this.value=t,$PAlP$import$isDirective(t)||(this.committer.dirty=!0))}commit(){for(;$PAlP$import$isDirective(this.value);){const t=this.value;this.value=$PAlP$import$noChange,t(this)}this.value!==$PAlP$import$noChange&&this.committer.commit()}}$PAlP$exports.AttributePart=$PAlP$export$AttributePart;class $PAlP$export$NodePart{constructor(t){this.value=void 0,this.__pendingValue=void 0,this.options=t}appendInto(t){this.startNode=t.appendChild($PAlP$import$createMarker()),this.endNode=t.appendChild($PAlP$import$createMarker())}insertAfterNode(t){this.startNode=t,this.endNode=t.nextSibling}appendIntoPart(t){t.__insert(this.startNode=$PAlP$import$createMarker()),t.__insert(this.endNode=$PAlP$import$createMarker())}insertAfterPart(t){t.__insert(this.startNode=$PAlP$import$createMarker()),this.endNode=t.endNode,t.endNode=this.startNode}setValue(t){this.__pendingValue=t}commit(){if(null===this.startNode.parentNode)return;for(;$PAlP$import$isDirective(this.__pendingValue);){const t=this.__pendingValue;this.__pendingValue=$PAlP$import$noChange,t(this)}const t=this.__pendingValue;t!==$PAlP$import$noChange&&($PAlP$export$isPrimitive(t)?t!==this.value&&this.__commitText(t):t instanceof $PAlP$import$TemplateResult?this.__commitTemplateResult(t):t instanceof Node?this.__commitNode(t):$PAlP$export$isIterable(t)?this.__commitIterable(t):t===$PAlP$import$nothing?(this.value=$PAlP$import$nothing,this.clear()):this.__commitText(t))}__insert(t){this.endNode.parentNode.insertBefore(t,this.endNode)}__commitNode(t){this.value!==t&&(this.clear(),this.__insert(t),this.value=t)}__commitText(t){const e=this.startNode.nextSibling,i=\"string\"==typeof(t=null==t?\"\":t)?t:String(t);e===this.endNode.previousSibling&&3===e.nodeType?e.data=i:this.__commitNode(document.createTextNode(i)),this.value=t}__commitTemplateResult(t){const e=this.options.templateFactory(t);if(this.value instanceof $PAlP$import$TemplateInstance&&this.value.template===e)this.value.update(t.values);else{const i=new $PAlP$import$TemplateInstance(e,t.processor,this.options),r=i._clone();i.update(t.values),this.__commitNode(r),this.value=i}}__commitIterable(t){Array.isArray(this.value)||(this.value=[],this.clear());const e=this.value;let i,r=0;for(const s of t)void 0===(i=e[r])&&(i=new $PAlP$export$NodePart(this.options),e.push(i),0===r?i.appendIntoPart(this):i.insertAfterPart(e[r-1])),i.setValue(s),i.commit(),r++;r<e.length&&(e.length=r,this.clear(i&&i.endNode))}clear(t=this.startNode){$PAlP$import$removeNodes(this.startNode.parentNode,t.nextSibling,this.endNode)}}$PAlP$exports.NodePart=$PAlP$export$NodePart;class $PAlP$export$BooleanAttributePart{constructor(t,e,i){if(this.value=void 0,this.__pendingValue=void 0,2!==i.length||\"\"!==i[0]||\"\"!==i[1])throw new Error(\"Boolean attributes can only contain a single expression\");this.element=t,this.name=e,this.strings=i}setValue(t){this.__pendingValue=t}commit(){for(;$PAlP$import$isDirective(this.__pendingValue);){const t=this.__pendingValue;this.__pendingValue=$PAlP$import$noChange,t(this)}if(this.__pendingValue===$PAlP$import$noChange)return;const t=!!this.__pendingValue;this.value!==t&&(t?this.element.setAttribute(this.name,\"\"):this.element.removeAttribute(this.name),this.value=t),this.__pendingValue=$PAlP$import$noChange}}$PAlP$exports.BooleanAttributePart=$PAlP$export$BooleanAttributePart;class $PAlP$export$PropertyCommitter extends $PAlP$export$AttributeCommitter{constructor(t,e,i){super(t,e,i),this.single=2===i.length&&\"\"===i[0]&&\"\"===i[1]}_createPart(){return new $PAlP$export$PropertyPart(this)}_getValue(){return this.single?this.parts[0].value:super._getValue()}commit(){this.dirty&&(this.dirty=!1,this.element[this.name]=this._getValue())}}$PAlP$exports.PropertyCommitter=$PAlP$export$PropertyCommitter;class $PAlP$export$PropertyPart extends $PAlP$export$AttributePart{}$PAlP$exports.PropertyPart=$PAlP$export$PropertyPart;let $PAlP$var$eventOptionsSupported=!1;(()=>{try{const e={get capture(){return $PAlP$var$eventOptionsSupported=!0,!1}};window.addEventListener(\"test\",e,e),window.removeEventListener(\"test\",e,e)}catch(t){}})();class $PAlP$export$EventPart{constructor(t,e,i){this.value=void 0,this.__pendingValue=void 0,this.element=t,this.eventName=e,this.eventContext=i,this.__boundHandleEvent=(t=>this.handleEvent(t))}setValue(t){this.__pendingValue=t}commit(){for(;$PAlP$import$isDirective(this.__pendingValue);){const t=this.__pendingValue;this.__pendingValue=$PAlP$import$noChange,t(this)}if(this.__pendingValue===$PAlP$import$noChange)return;const t=this.__pendingValue,e=this.value,i=null==t||null!=e&&(t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive),r=null!=t&&(null==e||i);i&&this.element.removeEventListener(this.eventName,this.__boundHandleEvent,this.__options),r&&(this.__options=$PAlP$var$getOptions(t),this.element.addEventListener(this.eventName,this.__boundHandleEvent,this.__options)),this.value=t,this.__pendingValue=$PAlP$import$noChange}handleEvent(t){\"function\"==typeof this.value?this.value.call(this.eventContext||this.element,t):this.value.handleEvent(t)}}$PAlP$exports.EventPart=$PAlP$export$EventPart;const $PAlP$var$getOptions=t=>t&&($PAlP$var$eventOptionsSupported?{capture:t.capture,passive:t.passive,once:t.once}:t.capture);"},"sourceMaps":null,"error":null,"hash":"ae4bc90fe1bafa9415bd35cbc5739bcd","cacheData":{"env":{},"imports":{"$PAlP$import$isDirective":["./directive.js","isDirective"],"$PAlP$import$removeNodes":["./dom.js","removeNodes"],"$PAlP$import$noChange":["./part.js","noChange"],"$PAlP$import$nothing":["./part.js","nothing"],"$PAlP$import$TemplateInstance":["./template-instance.js","TemplateInstance"],"$PAlP$import$TemplateResult":["./template-result.js","TemplateResult"],"$PAlP$import$createMarker":["./template.js","createMarker"]},"exports":{"isPrimitive":"$PAlP$export$isPrimitive","isIterable":"$PAlP$export$isIterable","AttributeCommitter":"$PAlP$export$AttributeCommitter","AttributePart":"$PAlP$export$AttributePart","NodePart":"$PAlP$export$NodePart","BooleanAttributePart":"$PAlP$export$BooleanAttributePart","PropertyCommitter":"$PAlP$export$PropertyCommitter","PropertyPart":"$PAlP$export$PropertyPart","EventPart":"$PAlP$export$EventPart"},"wildcards":[],"sideEffects":true,"isES6Module":true}}